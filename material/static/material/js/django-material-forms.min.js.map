{"version":3,"sources":["registry.js","django-material-forms.min.js","password-field.js","select-field.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","initComponent","node","allowUnknown","arguments","length","undefined","False","ctorName","dataset","mdcAutoInit","Error","Ctor","dmc","registry","component","attachTo","defineProperty","initComponents","root","document","nodes","querySelectorAll","i","onLoad","querySelector","pageLoaded","onBeforeRender","destroy","body","onRequestEnd","event","data","xhr","status","Turbolinks","controller","disable","register","console","warn","componentName","autoInit","window","addEventListener","removeEventListener","mdc","checkbox","MDCCheckbox","dialog","MDCDialog","drawer","MDCPersistentDrawer","MDCTemporaryDrawer","formField","MDCFormField","ripple","MDCRipple","gridList","MDCGridList","iconToggle","MDCIconToggle","linearProgress","MDCLinearProgress","radio","MDCRadio","snackbar","MDCSnackbar","tabs","MDCTab","MDCTabBar","textField","MDCTextField","menu","MDCSimpleMenu","select","MDCSelect","slider","MDCSlider","toolbar","MDCToolbar","define","amd","exports","navigator","browserLoad","module","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","DMCPasswordField","this","getPrototypeOf","apply","_mdc$base$MDCComponen","_this2","textField_","root_","input_","toggle_","onToggle","preventDefault","type","text","selectionStart","selectionEnd","focus","base","MDCFoundation","MDCComponent","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getter","_mdc$select$MDCSelect","foundation","superSetMenuStyle","setMenuStylesForOpenAtIndex_","resize","index","rect","adapter_","computeBoundingRect","setMenuElStyle","width","DMCSelect","_this3","customSelect_","nativeSelect_","changeHandler","_ref","changedSelect","selectToUpdate","selectedIndex","listen"],"mappings":"AAAA,YC4JA,SAASA,iBAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,4BAA2BC,EAAMC,GAAQ,IAAKD,EAAQ,KAAM,IAAIE,gBAAe,4DAAgE,QAAOD,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BD,EAAPC,EAElO,QAASE,WAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIP,WAAU,iEAAoEO,GAAeD,GAASE,UAAYC,OAAOC,OAAOH,GAAcA,EAAWC,WAAaG,aAAeC,MAAON,EAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,IAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,EAAUC,GAAcD,EAASW,UAAYV,GA4Dje,QAASV,iBAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,4BAA2BC,EAAMC,GAAQ,IAAKD,EAAQ,KAAM,IAAIE,gBAAe,4DAAgE,QAAOD,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BD,EAAPC,EAElO,QAASE,WAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIP,WAAU,iEAAoEO,GAAeD,GAASE,UAAYC,OAAOC,OAAOH,GAAcA,EAAWC,WAAaG,aAAeC,MAAON,EAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,IAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,EAAUC,GAAcD,EAASW,UAAYV,ID9Nje,WAQA,QAAAW,GAAAC,GACA,GAAAC,GAAAC,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,GAAAG,MAEAC,EAAAN,EAAAO,QAAAC,WACA,KAAAF,EACA,KAAA,IAAAG,OAAA,kDAEA,IAAAC,GAAAC,EAAAC,SAAAN,EACA,IAAA,kBAAAI,GAAA,CAMA,GAAAG,GAAAH,EAAAI,SAAAd,EACAV,QAAAyB,eAAAf,EAAAM,GACAb,MAAAoB,EACAlB,UAAA,EACAD,YAAA,EACAE,cAAA,QAVA,KAAAK,EACA,KAAA,IAAAQ,OAAA,8DAAAH,GAaA,QAAAU,KAKA,IAAA,GAAAhB,GAJAiB,EAAAf,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,GAAAgB,SACAjB,EAAAC,UAAAC,OAAA,GAAAC,SAAAF,UAAA,IAAAA,UAAA,GAEAiB,EAAAF,EAAAG,iBAAA,wBACAC,EAAA,EAAArB,EAAAmB,EAAAE,GAAAA,IACAtB,EAAAC,EAAAC,EAEAgB,GAAAV,SAAAU,EAAAV,QAAAC,aACAT,EAAAkB,EAAAhB,GAIA,QAAAqB,KACAN,EAAAE,SAAAK,cAAA,SAAA,GACAC,GAAA,EAGA,QAAAC,KACAD,GAAA,CAEA,KAAA,GADAL,GAAAD,SAAAE,iBAAA,6BACAC,EAAA,EAAAA,EAAAF,EAAAhB,OAAAkB,IAAA,CACA,GAAArB,GAAAmB,EAAAE,GACAf,EAAAN,EAAAO,QAAAC,YACAK,EAAAb,EAAAM,EACAO,GAAAa,UAGAR,SAAAS,KAAApB,QAAAC,aACAU,SAAAS,KAAAT,SAAAS,KAAApB,QAAAC,aAAAkB,UAIA,QAAAE,GAAAC,GACAA,EAAAC,KAAAC,IAAAC,QAAA,KACAC,WAAAC,WAAAC,UA/DA,GAAAxB,KACAA,GAAAC,SAAAtB,OAAAC,OAAA,KAEA,IAAAiC,IAAA,CA8HA,IA9DAb,EAAAyB,SAAA,SAAA9B,EAAAI,GACA,GAAA,kBAAAA,GACA,KAAA,IAAAD,OAAA,sCAAAC,EAAA,sBAOA,IALAC,EAAAC,SAAAN,IACA+B,QAAAC,KAAA,+CAAAC,cAAA,SAAA7B,EAAA,UAAAE,SAAA2B,gBAEA5B,EAAAC,SAAAN,GAAAI,EAEAc,EAIA,IAAA,GAAAxB,GADAmB,EAAAD,SAAAE,iBAAA,4BAAAd,EAAA,KACAe,EAAA,EAAArB,EAAAmB,EAAAE,GAAAA,IACA,GAAArB,EAAAM,GACA+B,QAAAC,KAAA,qDAAAtC,EAAA,qBADA,CAIA,GAAAa,GAAAH,EAAAI,SAAAd,EACAV,QAAAyB,eAAAf,EAAAM,GACAb,MAAAoB,EACAlB,UAAA,EACAD,YAAA,EACAE,cAAA,MAMAe,EAAA6B,SAAA,WACAC,OAAAC,iBAAA,kBAAApB,GACAmB,OAAAC,iBAAA,2BAAAjB,GACAgB,OAAAC,iBAAA,yBAAAd,GACAZ,KAGAL,EAAAe,QAAA,WACAe,OAAAE,oBAAA,kBAAArB,GACAmB,OAAAE,oBAAA,2BAAAlB,GACAgB,OAAAE,oBAAA,yBAAAf,IAGAjB,EAAAyB,SAAA,cAAAQ,IAAAC,SAAAC,aACAnC,EAAAyB,SAAA,YAAAQ,IAAAG,OAAAC,WACArC,EAAAyB,SAAA,sBAAAQ,IAAAK,OAAAC,qBACAvC,EAAAyB,SAAA,qBAAAQ,IAAAK,OAAAE,oBACAxC,EAAAyB,SAAA,eAAAQ,IAAAQ,UAAAC,cACA1C,EAAAyB,SAAA,YAAAQ,IAAAU,OAAAC,WACA5C,EAAAyB,SAAA,cAAAQ,IAAAY,SAAAC,aACA9C,EAAAyB,SAAA,gBAAAQ,IAAAc,WAAAC,eACAhD,EAAAyB,SAAA,oBAAAQ,IAAAgB,eAAAC,mBACAlD,EAAAyB,SAAA,WAAAQ,IAAAkB,MAAAC,UACApD,EAAAyB,SAAA,cAAAQ,IAAAoB,SAAAC,aACAtD,EAAAyB,SAAA,SAAAQ,IAAAsB,KAAAC,QACAxD,EAAAyB,SAAA,YAAAQ,IAAAsB,KAAAE,WACAzD,EAAAyB,SAAA,eAAAQ,IAAAyB,UAAAC,cACA3D,EAAAyB,SAAA,gBAAAQ,IAAA2B,KAAAC,eACA7D,EAAAyB,SAAA,YAAAQ,IAAA6B,OAAAC,WACA/D,EAAAyB,SAAA,YAAAQ,IAAA+B,OAAAC,WACAjE,EAAAyB,SAAA,aAAAQ,IAAAiC,QAAAC,YAGA,mBAAAC,SAAAA,OAAAC,IACAD,OAAA,WACA,MAAApE,SAEA,IAAA,mBAAAsE,SACAA,QAAAtE,IAAAA,MACA,IAAA,mBAAAuE,WAAA,CACA,GAAAC,GAAA,QAAAA,KACAxE,EAAA6B,WACAC,OAAAE,oBAAA,OAAAwC,GAGA1C,QAAAC,iBAAA,OAAAyC,GACA1C,OAAA9B,IAAAA,MACA,mBAAAyE,UACAA,OAAAH,QAAAtE,KCKA,IAAI0E,cAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAInE,GAAI,EAAGA,EAAImE,EAAMrF,OAAQkB,IAAK,CAAE,GAAIoE,GAAaD,EAAMnE,EAAIoE,GAAW/F,WAAa+F,EAAW/F,aAAc,EAAO+F,EAAW7F,cAAe,EAAU,SAAW6F,KAAYA,EAAW9F,UAAW,GAAML,OAAOyB,eAAewE,EAAQE,EAAWC,IAAKD,IAAiB,MAAO,UAAU7G,EAAa+G,EAAYC,GAAiJ,MAA9HD,IAAYL,EAAiB1G,EAAYS,UAAWsG,GAAiBC,GAAaN,EAAiB1G,EAAagH,GAAqBhH,MC1J1hBiH,iBAAAA,SAAAA,GDqKJ,QAASA,KAGP,MAFAnH,iBAAgBoH,KAAMD,GAEf/G,2BAA2BgH,MAAOD,EAAiB/F,WAAaR,OAAOyG,eAAeF,IAAmBG,MAAMF,KAAM5F,YA0C9H,MA/CAhB,WAAU2G,EAAkBI,GAQ5BZ,aAAaQ,IACXH,IAAK,aACLjG,MAAO,WCxKI,GAAAyG,GAAAJ,IACXA,MAAKK,WAAa,GAAIvD,KAAIyB,UAAUC,aAAawB,KAAKM,OACtDN,KAAKO,OAASP,KAAKM,MAAM7E,cAAc,0BACvCuE,KAAKQ,QAAUR,KAAKM,MAAM7E,cAAc,+BAExCuE,KAAKS,SAAW,SAAC1E,GACfA,EAAM2E,iBACmB,aAArBN,EAAKG,OAAOI,MACdP,EAAKG,OAAOI,KAAO,OACnBP,EAAKI,QAAQI,KAAO,mBAEpBR,EAAKG,OAAOI,KAAO,WACnBP,EAAKI,QAAQI,KAAO,cAGtBR,EAAKG,OAAOM,eAAiBT,EAAKG,OAAOO,aAAeV,EAAKG,OAAO5G,MAAMU,OAC1E+F,EAAKG,OAAOQ,SAEdf,KAAKQ,QAAQ5D,iBAAiB,QAASoD,KAAKS,aD6K5Cb,IAAK,UACLjG,MAAO,WC1KHqG,KAAKK,YACPL,KAAKK,WAAWzE,UAElBoE,KAAKQ,QAAQ3D,oBAAoB,QAASmD,KAAKS,eD8K/Cb,IAAK,WACLjG,MAAO,SC5MOwB,GACd,MAAO,IAAI4E,GAAiB5E,EAAM,GAAI2B,KAAIkE,KAAKC,mBDgN1ClB,GClNsBjD,IAAIkE,KAAKE,aAkCxCrG,KAAIyB,SAAS,mBAAoByD,iBDsLjC,IAAIR,cAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAInE,GAAI,EAAGA,EAAImE,EAAMrF,OAAQkB,IAAK,CAAE,GAAIoE,GAAaD,EAAMnE,EAAIoE,GAAW/F,WAAa+F,EAAW/F,aAAc,EAAO+F,EAAW7F,cAAe,EAAU,SAAW6F,KAAYA,EAAW9F,UAAW,GAAML,OAAOyB,eAAewE,EAAQE,EAAWC,IAAKD,IAAiB,MAAO,UAAU7G,EAAa+G,EAAYC,GAAiJ,MAA9HD,IAAYL,EAAiB1G,EAAYS,UAAWsG,GAAiBC,GAAaN,EAAiB1G,EAAagH,GAAqBhH,MAE5hBqI,KAAO,QAASC,GAAIC,EAAQC,EAAUC,GAA2B,OAAXF,IAAiBA,EAASG,SAASjI,UAAW,IAAIkI,GAAOjI,OAAOkI,yBAAyBL,EAAQC,EAAW,IAAahH,SAATmH,EAAoB,CAAE,GAAIE,GAASnI,OAAOyG,eAAeoB,EAAS,OAAe,QAAXM,EAAmB,OAAkCP,EAAIO,EAAQL,EAAUC,GAAoB,GAAI,SAAWE,GAAQ,MAAOA,GAAK9H,KAAgB,IAAIiI,GAASH,EAAKL,GAAK,IAAe9G,SAAXsH,EAA4C,MAAOA,GAAO1I,KAAKqI,IE1Ntd3C,UAAAA,SAAAA,GFqOJ,QAASA,KAGP,MAFAhG,iBAAgBoH,KAAMpB,GAEf5F,2BAA2BgH,MAAOpB,EAAU5E,WAAaR,OAAOyG,eAAerB,IAAYsB,MAAMF,KAAM5F,YAwBhH,MA7BAhB,WAAUwF,EAAWiD,GAQrBtC,aAAaX,IACXgB,IAAK,uBACLjG,MAAO,WE3OP,GAAImI,GAAAA,KAAAA,EAAAA,UAAAA,WAAAA,OAAAA,eAAAA,EAAAA,WAAAA,uBAAAA,MAAAA,KAAAA,MACAC,EAAoBD,EAAWE,4BAanC,OAXAF,GAAWG,OAAS,aAIpBH,EAAWE,6BAA+B,SAASE,GACjDH,EAAkB7I,KAAK4I,EAAYI,EAEnC,IAAMC,GAAOL,EAAWM,SAASC,qBACjCP,GAAWM,SAASE,eAAe,QAAYH,EAAKI,MAApD,OAGKT,MFgPFlD,GEhQe9B,IAAI6B,OAAOC,WAoB7B4D,UAAAA,SAAAA,GFkPJ,QAASA,KAGP,MAFA5J,iBAAgBoH,KAAMwC,GAEfxJ,2BAA2BgH,MAAOwC,EAAUxI,WAAaR,OAAOyG,eAAeuC,IAAYtC,MAAMF,KAAM5F,YA6ChH,MAlDAhB,WAAUoJ,EAAWrC,GAQrBZ,aAAaiD,IACX5C,IAAK,aACLjG,MAAO,WErPI,GAAA8I,GAAAzC,IACXA,MAAK0C,cAAgB,GAAI9D,WAAUoB,KAAKM,MAAM7E,cAAc,gCAC5DuE,KAAK2C,cAAgB3C,KAAKM,MAAM7E,cAAc,qBAC9CuE,KAAK4C,cAAgB,SAAAC,GAAY,GAAVlC,GAAUkC,EAAVlC,KACjBmC,EAAAA,OACAC,EAAAA,MAES,sBAATpC,GACFmC,EAAgBL,EAAKC,cACrBK,EAAiBN,EAAKE,gBAEtBG,EAAgBL,EAAKE,cACrBI,EAAiBN,EAAKC,eAExBK,EAAeC,cAAgBF,EAAcE,eAE/ChD,KAAK0C,cAAcO,OAAO,mBAAoBjD,KAAK4C,eACnD5C,KAAK2C,cAAc/F,iBAAiB,SAAUoD,KAAK4C,kBF4PnDhD,IAAK,UACLjG,MAAO,WEzPHqG,KAAK0C,eACP1C,KAAK0C,cAAc9G,UAEjBoE,KAAK2C,eACP3C,KAAK2C,cAAc9F,oBAAoB,SAAUmD,KAAK4C,oBF8PxDhD,IAAK,WACLjG,MAAO,SE5ROwB,GACd,MAAO,IAAIqH,GAAUrH,EAAM,GAAI2B,KAAIkE,KAAKC,mBFgSnCuB,GElSe1F,IAAIkE,KAAKE,aAmCjCrG,KAAIyB,SAAS,YAAakG","file":"django-material-forms.min.js","sourcesContent":["'use strict';\n\n(function () {\n  'use strict';\n\n  var dmc = {};\n  dmc.registry = Object.create(null);\n\n  var pageLoaded = false;\n\n  function initComponent(node) {\n    var allowUnknown = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : False;\n\n    var ctorName = node.dataset.mdcAutoInit;\n    if (!ctorName) {\n      throw new Error('(mdc-auto-init) Constructor name must be given.');\n    }\n    var Ctor = dmc.registry[ctorName];\n    if (typeof Ctor !== 'function') {\n      if (!allowUnknown) {\n        throw new Error('(mdc-auto-init) Could not find constructor in registry for ' + ctorName);\n      }\n      return;\n    }\n    var component = Ctor.attachTo(node);\n    Object.defineProperty(node, ctorName, {\n      value: component,\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n  };\n\n  function initComponents() {\n    var root = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n    var allowUnknown = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    var nodes = root.querySelectorAll('[data-mdc-auto-init]');\n    for (var i = 0, node; node = nodes[i]; i++) {\n      initComponent(node, allowUnknown);\n    }\n    if (root.dataset && root.dataset.mdcAutoInit) {\n      initComponent(root, allowUnknown);\n    }\n  }\n\n  function onLoad() {\n    initComponents(document.querySelector('body'), true);\n    pageLoaded = true;\n  }\n\n  function onBeforeRender() {\n    pageLoaded = false;\n    var nodes = document.querySelectorAll('body [data-mdc-auto-init]');\n    for (var i = 0; i < nodes.length; i++) {\n      var node = nodes[i];\n      var ctorName = node.dataset.mdcAutoInit;\n      var component = node[ctorName];\n      component.destroy();\n    }\n\n    if (document.body.dataset.mdcAutoInit) {\n      document.body[document.body.dataset.mdcAutoInit].destroy();\n    }\n  }\n\n  function onRequestEnd(event) {\n    if (event.data.xhr.status >= 400) {\n      Turbolinks.controller.disable();\n    }\n  }\n\n  dmc.register = function (ctorName, Ctor) {\n    if (typeof Ctor !== 'function') {\n      throw new Error('(mdc-auto-init) Invalid Ctor value ' + Ctor + '. Expected function');\n    }\n    if (dmc.registry[ctorName]) {\n      console.warn('(mdc-auto-init) Overriding registration for ' + componentName + ' with ' + Ctor + '. ' + ('Was: ' + registry[componentName]));\n    }\n    dmc.registry[ctorName] = Ctor;\n\n    if (pageLoaded) {\n      // an additional script loaded after turbolinks:load,\n      // components need to be initialized on the current page\n      var nodes = document.querySelectorAll('body [data-mdc-auto-init=' + ctorName + ']');\n      for (var i = 0, node; node = nodes[i]; i++) {\n        if (node[ctorName]) {\n          console.warn('(mdc-auto-init) Component already initialized for ' + node + '. Skipping...');\n          continue;\n        }\n        var component = Ctor.attachTo(node);\n        Object.defineProperty(node, ctorName, {\n          value: component,\n          writable: false,\n          enumerable: false,\n          configurable: true\n        });\n      }\n    }\n  };\n\n  dmc.autoInit = function () {\n    window.addEventListener('turbolinks:load', onLoad);\n    window.addEventListener('turbolinks:before-render', onBeforeRender);\n    window.addEventListener('turbolinks:request-end', onRequestEnd);\n    initComponents();\n  };\n\n  dmc.destroy = function () {\n    window.removeEventListener('turbolinks:load', onLoad);\n    window.removeEventListener('turbolinks:before-render', onBeforeRender);\n    window.removeEventListener('turbolinks:request-end', onRequestEnd);\n  };\n\n  dmc.register('MDCCheckbox', mdc.checkbox.MDCCheckbox);\n  dmc.register('MDCDialog', mdc.dialog.MDCDialog);\n  dmc.register('MDCPersistentDrawer', mdc.drawer.MDCPersistentDrawer);\n  dmc.register('MDCTemporaryDrawer', mdc.drawer.MDCTemporaryDrawer);\n  dmc.register('MDCFormField', mdc.formField.MDCFormField);\n  dmc.register('MDCRipple', mdc.ripple.MDCRipple);\n  dmc.register('MDCGridList', mdc.gridList.MDCGridList);\n  dmc.register('MDCIconToggle', mdc.iconToggle.MDCIconToggle);\n  dmc.register('MDCLinearProgress', mdc.linearProgress.MDCLinearProgress);\n  dmc.register('MDCRadio', mdc.radio.MDCRadio);\n  dmc.register('MDCSnackbar', mdc.snackbar.MDCSnackbar);\n  dmc.register('MDCTab', mdc.tabs.MDCTab);\n  dmc.register('MDCTabBar', mdc.tabs.MDCTabBar);\n  dmc.register('MDCTextField', mdc.textField.MDCTextField);\n  dmc.register('MDCSimpleMenu', mdc.menu.MDCSimpleMenu);\n  dmc.register('MDCSelect', mdc.select.MDCSelect);\n  dmc.register('MDCSlider', mdc.slider.MDCSlider);\n  dmc.register('MDCToolbar', mdc.toolbar.MDCToolbar);\n\n  // Module definition\n  if (typeof define !== 'undefined' && define.amd) {\n    define(function () {\n      return dmc;\n    });\n  } else if (typeof exports !== 'undefined') {\n    exports.dmc = dmc;\n  } else if (typeof navigator !== 'undefined') {\n    var browserLoad = function browserLoad() {\n      dmc.autoInit();\n      window.removeEventListener('load', browserLoad);\n    };\n\n    window.addEventListener('load', browserLoad);\n    window.dmc = dmc;\n  } else if (typeof module !== 'undefined') {\n    module.exports = dmc;\n  }\n})();","'use strict';\n\n(function () {\n  'use strict';\n\n  var dmc = {};\n  dmc.registry = Object.create(null);\n\n  var pageLoaded = false;\n\n  function initComponent(node) {\n    var allowUnknown = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : False;\n\n    var ctorName = node.dataset.mdcAutoInit;\n    if (!ctorName) {\n      throw new Error('(mdc-auto-init) Constructor name must be given.');\n    }\n    var Ctor = dmc.registry[ctorName];\n    if (typeof Ctor !== 'function') {\n      if (!allowUnknown) {\n        throw new Error('(mdc-auto-init) Could not find constructor in registry for ' + ctorName);\n      }\n      return;\n    }\n    var component = Ctor.attachTo(node);\n    Object.defineProperty(node, ctorName, {\n      value: component,\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n  };\n\n  function initComponents() {\n    var root = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n    var allowUnknown = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    var nodes = root.querySelectorAll('[data-mdc-auto-init]');\n    for (var i = 0, node; node = nodes[i]; i++) {\n      initComponent(node, allowUnknown);\n    }\n    if (root.dataset && root.dataset.mdcAutoInit) {\n      initComponent(root, allowUnknown);\n    }\n  }\n\n  function onLoad() {\n    initComponents(document.querySelector('body'), true);\n    pageLoaded = true;\n  }\n\n  function onBeforeRender() {\n    pageLoaded = false;\n    var nodes = document.querySelectorAll('body [data-mdc-auto-init]');\n    for (var i = 0; i < nodes.length; i++) {\n      var node = nodes[i];\n      var ctorName = node.dataset.mdcAutoInit;\n      var component = node[ctorName];\n      component.destroy();\n    }\n\n    if (document.body.dataset.mdcAutoInit) {\n      document.body[document.body.dataset.mdcAutoInit].destroy();\n    }\n  }\n\n  function onRequestEnd(event) {\n    if (event.data.xhr.status >= 400) {\n      Turbolinks.controller.disable();\n    }\n  }\n\n  dmc.register = function (ctorName, Ctor) {\n    if (typeof Ctor !== 'function') {\n      throw new Error('(mdc-auto-init) Invalid Ctor value ' + Ctor + '. Expected function');\n    }\n    if (dmc.registry[ctorName]) {\n      console.warn('(mdc-auto-init) Overriding registration for ' + componentName + ' with ' + Ctor + '. ' + ('Was: ' + registry[componentName]));\n    }\n    dmc.registry[ctorName] = Ctor;\n\n    if (pageLoaded) {\n      // an additional script loaded after turbolinks:load,\n      // components need to be initialized on the current page\n      var nodes = document.querySelectorAll('body [data-mdc-auto-init=' + ctorName + ']');\n      for (var i = 0, node; node = nodes[i]; i++) {\n        if (node[ctorName]) {\n          console.warn('(mdc-auto-init) Component already initialized for ' + node + '. Skipping...');\n          continue;\n        }\n        var component = Ctor.attachTo(node);\n        Object.defineProperty(node, ctorName, {\n          value: component,\n          writable: false,\n          enumerable: false,\n          configurable: true\n        });\n      }\n    }\n  };\n\n  dmc.autoInit = function () {\n    window.addEventListener('turbolinks:load', onLoad);\n    window.addEventListener('turbolinks:before-render', onBeforeRender);\n    window.addEventListener('turbolinks:request-end', onRequestEnd);\n    initComponents();\n  };\n\n  dmc.destroy = function () {\n    window.removeEventListener('turbolinks:load', onLoad);\n    window.removeEventListener('turbolinks:before-render', onBeforeRender);\n    window.removeEventListener('turbolinks:request-end', onRequestEnd);\n  };\n\n  dmc.register('MDCCheckbox', mdc.checkbox.MDCCheckbox);\n  dmc.register('MDCDialog', mdc.dialog.MDCDialog);\n  dmc.register('MDCPersistentDrawer', mdc.drawer.MDCPersistentDrawer);\n  dmc.register('MDCTemporaryDrawer', mdc.drawer.MDCTemporaryDrawer);\n  dmc.register('MDCFormField', mdc.formField.MDCFormField);\n  dmc.register('MDCRipple', mdc.ripple.MDCRipple);\n  dmc.register('MDCGridList', mdc.gridList.MDCGridList);\n  dmc.register('MDCIconToggle', mdc.iconToggle.MDCIconToggle);\n  dmc.register('MDCLinearProgress', mdc.linearProgress.MDCLinearProgress);\n  dmc.register('MDCRadio', mdc.radio.MDCRadio);\n  dmc.register('MDCSnackbar', mdc.snackbar.MDCSnackbar);\n  dmc.register('MDCTab', mdc.tabs.MDCTab);\n  dmc.register('MDCTabBar', mdc.tabs.MDCTabBar);\n  dmc.register('MDCTextField', mdc.textField.MDCTextField);\n  dmc.register('MDCSimpleMenu', mdc.menu.MDCSimpleMenu);\n  dmc.register('MDCSelect', mdc.select.MDCSelect);\n  dmc.register('MDCSlider', mdc.slider.MDCSlider);\n  dmc.register('MDCToolbar', mdc.toolbar.MDCToolbar);\n\n  // Module definition\n  if (typeof define !== 'undefined' && define.amd) {\n    define(function () {\n      return dmc;\n    });\n  } else if (typeof exports !== 'undefined') {\n    exports.dmc = dmc;\n  } else if (typeof navigator !== 'undefined') {\n    var browserLoad = function browserLoad() {\n      dmc.autoInit();\n      window.removeEventListener('load', browserLoad);\n    };\n\n    window.addEventListener('load', browserLoad);\n    window.dmc = dmc;\n  } else if (typeof module !== 'undefined') {\n    module.exports = dmc;\n  }\n})();\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar DMCPasswordField = function (_mdc$base$MDCComponen) {\n  _inherits(DMCPasswordField, _mdc$base$MDCComponen);\n\n  function DMCPasswordField() {\n    _classCallCheck(this, DMCPasswordField);\n\n    return _possibleConstructorReturn(this, (DMCPasswordField.__proto__ || Object.getPrototypeOf(DMCPasswordField)).apply(this, arguments));\n  }\n\n  _createClass(DMCPasswordField, [{\n    key: 'initialize',\n    value: function initialize() {\n      var _this2 = this;\n\n      this.textField_ = new mdc.textField.MDCTextField(this.root_);\n      this.input_ = this.root_.querySelector('.dmc-text-field__input');\n      this.toggle_ = this.root_.querySelector('.dmc-password-field__toggle');\n\n      this.onToggle = function (event) {\n        event.preventDefault();\n        if (_this2.input_.type === 'password') {\n          _this2.input_.type = 'text';\n          _this2.toggle_.text = 'visibility_off';\n        } else {\n          _this2.input_.type = 'password';\n          _this2.toggle_.text = 'visibility';\n        }\n\n        _this2.input_.selectionStart = _this2.input_.selectionEnd = _this2.input_.value.length;\n        _this2.input_.focus();\n      };\n      this.toggle_.addEventListener('click', this.onToggle);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      if (this.textField_) {\n        this.textField_.destroy();\n      }\n      this.toggle_.removeEventListener('click', this.onToggle);\n    }\n  }], [{\n    key: 'attachTo',\n    value: function attachTo(root) {\n      return new DMCPasswordField(root, new mdc.base.MDCFoundation());\n    }\n  }]);\n\n  return DMCPasswordField;\n}(mdc.base.MDCComponent);\n\ndmc.register('DMCPasswordField', DMCPasswordField);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MDCSelect = function (_mdc$select$MDCSelect) {\n  _inherits(MDCSelect, _mdc$select$MDCSelect);\n\n  function MDCSelect() {\n    _classCallCheck(this, MDCSelect);\n\n    return _possibleConstructorReturn(this, (MDCSelect.__proto__ || Object.getPrototypeOf(MDCSelect)).apply(this, arguments));\n  }\n\n  _createClass(MDCSelect, [{\n    key: 'getDefaultFoundation',\n    value: function getDefaultFoundation() {\n      var foundation = _get(MDCSelect.prototype.__proto__ || Object.getPrototypeOf(MDCSelect.prototype), 'getDefaultFoundation', this).call(this);\n      var superSetMenuStyle = foundation.setMenuStylesForOpenAtIndex_;\n\n      foundation.resize = function () {\n        /* no action here */\n      };\n\n      foundation.setMenuStylesForOpenAtIndex_ = function (index) {\n        superSetMenuStyle.call(foundation, index);\n\n        var rect = foundation.adapter_.computeBoundingRect();\n        foundation.adapter_.setMenuElStyle('width', rect.width + 'px');\n      };\n\n      return foundation;\n    }\n  }]);\n\n  return MDCSelect;\n}(mdc.select.MDCSelect);\n\nvar DMCSelect = function (_mdc$base$MDCComponen) {\n  _inherits(DMCSelect, _mdc$base$MDCComponen);\n\n  function DMCSelect() {\n    _classCallCheck(this, DMCSelect);\n\n    return _possibleConstructorReturn(this, (DMCSelect.__proto__ || Object.getPrototypeOf(DMCSelect)).apply(this, arguments));\n  }\n\n  _createClass(DMCSelect, [{\n    key: 'initialize',\n    value: function initialize() {\n      var _this3 = this;\n\n      this.customSelect_ = new MDCSelect(this.root_.querySelector('.mdc-select[role=\"listbox\"]'));\n      this.nativeSelect_ = this.root_.querySelector('select.mdc-select');\n      this.changeHandler = function (_ref) {\n        var type = _ref.type;\n\n        var changedSelect = void 0;\n        var selectToUpdate = void 0;\n\n        if (type === 'MDCSelect:change') {\n          changedSelect = _this3.customSelect_;\n          selectToUpdate = _this3.nativeSelect_;\n        } else {\n          changedSelect = _this3.nativeSelect_;\n          selectToUpdate = _this3.customSelect_;\n        }\n        selectToUpdate.selectedIndex = changedSelect.selectedIndex;\n      };\n      this.customSelect_.listen('MDCSelect:change', this.changeHandler);\n      this.nativeSelect_.addEventListener('change', this.changeHandler);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      if (this.customSelect_) {\n        this.customSelect_.destroy();\n      }\n      if (this.nativeSelect_) {\n        this.nativeSelect_.removeEventListener('change', this.changeHandler);\n      }\n    }\n  }], [{\n    key: 'attachTo',\n    value: function attachTo(root) {\n      return new DMCSelect(root, new mdc.base.MDCFoundation());\n    }\n  }]);\n\n  return DMCSelect;\n}(mdc.base.MDCComponent);\n\ndmc.register('DMCSelect', DMCSelect);","class DMCPasswordField extends mdc.base.MDCComponent {\n  static attachTo(root) {\n    return new DMCPasswordField(root, new mdc.base.MDCFoundation());\n  }\n\n  initialize() {\n    this.textField_ = new mdc.textField.MDCTextField(this.root_);\n    this.input_ = this.root_.querySelector('.dmc-text-field__input');\n    this.toggle_ = this.root_.querySelector('.dmc-password-field__toggle');\n\n    this.onToggle = (event) => {\n      event.preventDefault();\n      if (this.input_.type === 'password') {\n        this.input_.type = 'text';\n        this.toggle_.text = 'visibility_off';\n      } else {\n        this.input_.type = 'password';\n        this.toggle_.text = 'visibility';\n      }\n\n      this.input_.selectionStart = this.input_.selectionEnd = this.input_.value.length;\n      this.input_.focus();\n    };\n    this.toggle_.addEventListener('click', this.onToggle);\n  }\n\n  destroy() {\n    if (this.textField_) {\n      this.textField_.destroy();\n    }\n    this.toggle_.removeEventListener('click', this.onToggle);\n  }\n}\n\ndmc.register('DMCPasswordField', DMCPasswordField);\n","class MDCSelect extends mdc.select.MDCSelect {\n  getDefaultFoundation() {\n    let foundation = super.getDefaultFoundation();\n    let superSetMenuStyle = foundation.setMenuStylesForOpenAtIndex_;\n\n    foundation.resize = function() {\n      /* no action here */\n    };\n\n    foundation.setMenuStylesForOpenAtIndex_ = function(index) {\n      superSetMenuStyle.call(foundation, index);\n\n      const rect = foundation.adapter_.computeBoundingRect();\n      foundation.adapter_.setMenuElStyle('width', `${rect.width}px`);\n    };\n\n    return foundation;\n  }\n}\n\nclass DMCSelect extends mdc.base.MDCComponent {\n  static attachTo(root) {\n    return new DMCSelect(root, new mdc.base.MDCFoundation());\n  }\n\n  initialize() {\n    this.customSelect_ = new MDCSelect(this.root_.querySelector('.mdc-select[role=\"listbox\"]'));\n    this.nativeSelect_ = this.root_.querySelector('select.mdc-select');\n    this.changeHandler = ({type}) => {\n      let changedSelect;\n      let selectToUpdate;\n\n      if (type === 'MDCSelect:change') {\n        changedSelect = this.customSelect_;\n        selectToUpdate = this.nativeSelect_;\n      } else {\n        changedSelect = this.nativeSelect_;\n        selectToUpdate = this.customSelect_;\n      }\n      selectToUpdate.selectedIndex = changedSelect.selectedIndex;\n    };\n    this.customSelect_.listen('MDCSelect:change', this.changeHandler);\n    this.nativeSelect_.addEventListener('change', this.changeHandler);\n  }\n\n  destroy() {\n    if (this.customSelect_) {\n      this.customSelect_.destroy();\n    }\n    if (this.nativeSelect_) {\n      this.nativeSelect_.removeEventListener('change', this.changeHandler);\n    }\n  }\n}\n\ndmc.register('DMCSelect', DMCSelect);\n"]}