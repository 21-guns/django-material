{"version":3,"sources":["registry.js","django-material-forms.min.js","datetime-fields.js","password-field.js","select-field.js"],"names":["_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","initComponent","node","allowUnknown","arguments","length","undefined","False","ctorName","dataset","mdcAutoInit","Error","Ctor","dmc","registry","component","attachTo","defineProperty","initComponents","root","document","nodes","querySelectorAll","i","onLoad","querySelector","pageLoaded","onBeforeRender","destroy","body","onRequestEnd","event","data","xhr","status","Turbolinks","controller","disable","register","console","warn","componentName","autoInit","window","addEventListener","removeEventListener","mdc","lineRipple","MDCLineRipple","checkbox","MDCCheckbox","chips","MDCChip","MDCChipSet","dialog","MDCDialog","drawer","MDCPersistentDrawer","MDCTemporaryDrawer","formField","MDCFormField","ripple","MDCRipple","gridList","MDCGridList","iconToggle","MDCIconToggle","linearProgress","MDCLinearProgress","radio","MDCRadio","snackbar","MDCSnackbar","tabs","MDCTab","MDCTabBar","textField","MDCTextField","menu","MDCMenu","select","MDCSelect","slider","MDCSlider","toolbar","MDCToolbar","define","amd","exports","navigator","browserLoad","django","jsi18n_initialized","pluralidx","count","gettext","msg","ngettext","singular","plural","gettext_noop","pgettext","context","npgettext","formats","DATETIME_FORMAT","DATETIME_INPUT_FORMATS","DATE_FORMAT","DATE_INPUT_FORMATS","DECIMAL_SEPARATOR","FIRST_DAY_OF_WEEK","MONTH_DAY_FORMAT","NUMBER_GROUPING","SHORT_DATETIME_FORMAT","SHORT_DATE_FORMAT","THOUSAND_SEPARATOR","TIME_FORMAT","TIME_INPUT_FORMATS","YEAR_MONTH_FORMAT","get_format","formatType","module","_set","set","object","property","receiver","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","setter","_get","get","Function","getter","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","DMCDateUtils","this","format","result","getDate","slice","getMonth","getFullYear","splitFormat","split","date","day","month","year","Date","UTC","firstDayOfWeek","parseInt","monthsOfYear","monthsOfYearAbbr","daysOfWeek","daysOfWeekAbbr","DMCCalendar","_this","root_","surfaceEl_","currentMonthEl_","prevMonthButtonEl_","nextMonthButtonEl_","disabled_","classList","contains","currentYear_","currentMonth_","selectedDate_","NaN","prevMonthClickHandler_","handlePrevMonthClick_","nextMonthClickHandler_","handleNextMonthClick_","dayClickHandler_","handleDayClick_","changeMonth_","tagName","textContent","isNaN","changeDay_","currentDay","titleEl","innerText","weekdaysEl","innerHTML","map","e","join","daysEl","days","startPos","getDay","daysInMonth","push","j","cell","label","class_","shift","updateCurrentMonth","renderMonth_","updateCurrentDate_","DMCInlineCalendar","_this2","targetEl_","getElementById","dateTarget","initialDate","parseDateTime","dateFormat","_DMCCalendar","selectedDate","formatDate","DMCPopupCalendar","_this3","headerEl_","headerYearEl_","headerWeekdayEl_","headerDayEl_","_DMCCalendar2","renderHeader","DMCDateInput","_this4","textEl_","calendarEl_","dialogEl_","buttonEl_","popupOpenHandler","handlePopupOpen","acceptDialogHandler","handleDialogAccept","text_","dialog_","calendar_","listen","preventDefault","lastFocusedTarget","show","DMCPasswordField","apply","_mdc$base$MDCComponen","textField_","input_","toggle_","onToggle","type","text","selectionStart","selectionEnd","focus","base","MDCFoundation","MDCComponent","_mdc$select$MDCSelect","foundation","superSetMenuStyle","setMenuStylesForOpenAtIndex_","resize","index","rect","adapter_","computeBoundingRect","setMenuElStyle","width","DMCSelect","customSelect_","nativeSelect_","changeHandler","_ref","changedSelect","selectToUpdate","selectedIndex"],"mappings":"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","file":"django-material-forms.min.js","sourcesContent":["'use strict';\n\n(function () {\n  'use strict';\n\n  var dmc = {};\n  dmc.registry = Object.create(null);\n\n  var pageLoaded = false;\n\n  function initComponent(node) {\n    var allowUnknown = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : False;\n\n    var ctorName = node.dataset.mdcAutoInit;\n    if (!ctorName) {\n      throw new Error('(mdc-auto-init) Constructor name must be given.');\n    }\n    var Ctor = dmc.registry[ctorName];\n    if (typeof Ctor !== 'function') {\n      if (!allowUnknown) {\n        throw new Error('(mdc-auto-init) Could not find constructor in registry for ' + ctorName);\n      }\n      return;\n    }\n    var component = Ctor.attachTo(node);\n    Object.defineProperty(node, ctorName, {\n      value: component,\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n  };\n\n  function initComponents() {\n    var root = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n    var allowUnknown = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    var nodes = root.querySelectorAll('[data-mdc-auto-init]');\n    for (var i = 0, node; node = nodes[i]; i++) {\n      initComponent(node, allowUnknown);\n    }\n    if (root.dataset && root.dataset.mdcAutoInit) {\n      initComponent(root, allowUnknown);\n    }\n  }\n\n  function onLoad() {\n    initComponents(document.querySelector('body'), true);\n    pageLoaded = true;\n  }\n\n  function onBeforeRender() {\n    pageLoaded = false;\n    var nodes = document.querySelectorAll('body [data-mdc-auto-init]');\n    for (var i = 0; i < nodes.length; i++) {\n      var node = nodes[i];\n      var ctorName = node.dataset.mdcAutoInit;\n      var component = node[ctorName];\n      component.destroy();\n    }\n\n    if (document.body.dataset.mdcAutoInit) {\n      document.body[document.body.dataset.mdcAutoInit].destroy();\n    }\n  }\n\n  function onRequestEnd(event) {\n    if (event.data.xhr.status >= 400) {\n      Turbolinks.controller.disable();\n    }\n  }\n\n  dmc.register = function (ctorName, Ctor) {\n    if (typeof Ctor !== 'function') {\n      throw new Error('(mdc-auto-init) Invalid Ctor value ' + Ctor + '. Expected function');\n    }\n    if (dmc.registry[ctorName]) {\n      console.warn('(mdc-auto-init) Overriding registration for ' + componentName + ' with ' + Ctor + '. ' + ('Was: ' + registry[componentName]));\n    }\n    dmc.registry[ctorName] = Ctor;\n\n    if (pageLoaded) {\n      // an additional script loaded after turbolinks:load,\n      // components need to be initialized on the current page\n      var nodes = document.querySelectorAll('body [data-mdc-auto-init=' + ctorName + ']');\n      for (var i = 0, node; node = nodes[i]; i++) {\n        if (node[ctorName]) {\n          console.warn('(mdc-auto-init) Component already initialized for ' + node + '. Skipping...');\n          continue;\n        }\n        var component = Ctor.attachTo(node);\n        Object.defineProperty(node, ctorName, {\n          value: component,\n          writable: false,\n          enumerable: false,\n          configurable: true\n        });\n      }\n    }\n  };\n\n  dmc.autoInit = function () {\n    window.addEventListener('turbolinks:load', onLoad);\n    window.addEventListener('turbolinks:before-render', onBeforeRender);\n    window.addEventListener('turbolinks:request-end', onRequestEnd);\n    initComponents();\n  };\n\n  dmc.destroy = function () {\n    window.removeEventListener('turbolinks:load', onLoad);\n    window.removeEventListener('turbolinks:before-render', onBeforeRender);\n    window.removeEventListener('turbolinks:request-end', onRequestEnd);\n  };\n\n  dmc.register('MDCLineRipple', mdc.lineRipple.MDCLineRipple);\n  dmc.register('MDCCheckbox', mdc.checkbox.MDCCheckbox);\n  dmc.register('MDCChip', mdc.chips.MDCChip);\n  dmc.register('MDCChipSet', mdc.chips.MDCChipSet);\n  dmc.register('MDCDialog', mdc.dialog.MDCDialog);\n  dmc.register('MDCPersistentDrawer', mdc.drawer.MDCPersistentDrawer);\n  dmc.register('MDCTemporaryDrawer', mdc.drawer.MDCTemporaryDrawer);\n  dmc.register('MDCFormField', mdc.formField.MDCFormField);\n  dmc.register('MDCRipple', mdc.ripple.MDCRipple);\n  dmc.register('MDCGridList', mdc.gridList.MDCGridList);\n  dmc.register('MDCIconToggle', mdc.iconToggle.MDCIconToggle);\n  dmc.register('MDCLinearProgress', mdc.linearProgress.MDCLinearProgress);\n  dmc.register('MDCRadio', mdc.radio.MDCRadio);\n  dmc.register('MDCSnackbar', mdc.snackbar.MDCSnackbar);\n  dmc.register('MDCTab', mdc.tabs.MDCTab);\n  dmc.register('MDCTabBar', mdc.tabs.MDCTabBar);\n  dmc.register('MDCTextField', mdc.textField.MDCTextField);\n  dmc.register('MDCMenu', mdc.menu.MDCMenu);\n  dmc.register('MDCSelect', mdc.select.MDCSelect);\n  dmc.register('MDCSlider', mdc.slider.MDCSlider);\n  dmc.register('MDCToolbar', mdc.toolbar.MDCToolbar);\n\n  // Module definition\n  if (typeof define !== 'undefined' && define.amd) {\n    define(function () {\n      return dmc;\n    });\n  } else if (typeof exports !== 'undefined') {\n    exports.dmc = dmc;\n  } else if (typeof navigator !== 'undefined') {\n    var browserLoad = function browserLoad() {\n      dmc.autoInit();\n      window.removeEventListener('load', browserLoad);\n    };\n\n    ;\n\n    window.addEventListener('load', browserLoad);\n    window.dmc = dmc;\n\n    // django translation stubs\n    if (!window.django || !window.django.jsi18n_initialized) {\n      window.pluralidx = function (count) {\n        return count == 1 ? 0 : 1;\n      };\n      window.gettext = function (msg) {\n        return msg;\n      };\n      window.ngettext = function (singular, plural, count) {\n        return count == 1 ? singular : plural;\n      };\n      window.gettext_noop = function (msg) {\n        return msg;\n      };\n      window.pgettext = function (context, msg) {\n        return msg;\n      };\n      window.npgettext = function (context, singular, plural, count) {\n        return count == 1 ? singular : plural;\n      };\n      var formats = {\n        'DATETIME_FORMAT': 'N j, Y, P',\n        'DATETIME_INPUT_FORMATS': ['%Y-%m-%d %H:%M:%S'],\n        'DATE_FORMAT': 'N j, Y',\n        'DATE_INPUT_FORMATS': ['%Y-%m-%d'],\n        'DECIMAL_SEPARATOR': '.',\n        'FIRST_DAY_OF_WEEK': 0,\n        'MONTH_DAY_FORMAT': 'F j',\n        'NUMBER_GROUPING': 3,\n        'SHORT_DATETIME_FORMAT': 'm/d/Y P',\n        'SHORT_DATE_FORMAT': 'm/d/Y',\n        'THOUSAND_SEPARATOR': ',',\n        'TIME_FORMAT': 'P',\n        'TIME_INPUT_FORMATS': ['%H:%M:%S'],\n        'YEAR_MONTH_FORMAT': 'F Y'\n      };\n\n      window.get_format = function (formatType) {\n        var value = formats[formatType];\n        if (typeof value == 'undefined') {\n          return formatType;\n        } else {\n          return value;\n        }\n      };\n    }\n  } else if (typeof module !== 'undefined') {\n    module.exports = dmc;\n  }\n})();","'use strict';\n\n(function () {\n  'use strict';\n\n  var dmc = {};\n  dmc.registry = Object.create(null);\n\n  var pageLoaded = false;\n\n  function initComponent(node) {\n    var allowUnknown = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : False;\n\n    var ctorName = node.dataset.mdcAutoInit;\n    if (!ctorName) {\n      throw new Error('(mdc-auto-init) Constructor name must be given.');\n    }\n    var Ctor = dmc.registry[ctorName];\n    if (typeof Ctor !== 'function') {\n      if (!allowUnknown) {\n        throw new Error('(mdc-auto-init) Could not find constructor in registry for ' + ctorName);\n      }\n      return;\n    }\n    var component = Ctor.attachTo(node);\n    Object.defineProperty(node, ctorName, {\n      value: component,\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n  };\n\n  function initComponents() {\n    var root = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n    var allowUnknown = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    var nodes = root.querySelectorAll('[data-mdc-auto-init]');\n    for (var i = 0, node; node = nodes[i]; i++) {\n      initComponent(node, allowUnknown);\n    }\n    if (root.dataset && root.dataset.mdcAutoInit) {\n      initComponent(root, allowUnknown);\n    }\n  }\n\n  function onLoad() {\n    initComponents(document.querySelector('body'), true);\n    pageLoaded = true;\n  }\n\n  function onBeforeRender() {\n    pageLoaded = false;\n    var nodes = document.querySelectorAll('body [data-mdc-auto-init]');\n    for (var i = 0; i < nodes.length; i++) {\n      var node = nodes[i];\n      var ctorName = node.dataset.mdcAutoInit;\n      var component = node[ctorName];\n      component.destroy();\n    }\n\n    if (document.body.dataset.mdcAutoInit) {\n      document.body[document.body.dataset.mdcAutoInit].destroy();\n    }\n  }\n\n  function onRequestEnd(event) {\n    if (event.data.xhr.status >= 400) {\n      Turbolinks.controller.disable();\n    }\n  }\n\n  dmc.register = function (ctorName, Ctor) {\n    if (typeof Ctor !== 'function') {\n      throw new Error('(mdc-auto-init) Invalid Ctor value ' + Ctor + '. Expected function');\n    }\n    if (dmc.registry[ctorName]) {\n      console.warn('(mdc-auto-init) Overriding registration for ' + componentName + ' with ' + Ctor + '. ' + ('Was: ' + registry[componentName]));\n    }\n    dmc.registry[ctorName] = Ctor;\n\n    if (pageLoaded) {\n      // an additional script loaded after turbolinks:load,\n      // components need to be initialized on the current page\n      var nodes = document.querySelectorAll('body [data-mdc-auto-init=' + ctorName + ']');\n      for (var i = 0, node; node = nodes[i]; i++) {\n        if (node[ctorName]) {\n          console.warn('(mdc-auto-init) Component already initialized for ' + node + '. Skipping...');\n          continue;\n        }\n        var component = Ctor.attachTo(node);\n        Object.defineProperty(node, ctorName, {\n          value: component,\n          writable: false,\n          enumerable: false,\n          configurable: true\n        });\n      }\n    }\n  };\n\n  dmc.autoInit = function () {\n    window.addEventListener('turbolinks:load', onLoad);\n    window.addEventListener('turbolinks:before-render', onBeforeRender);\n    window.addEventListener('turbolinks:request-end', onRequestEnd);\n    initComponents();\n  };\n\n  dmc.destroy = function () {\n    window.removeEventListener('turbolinks:load', onLoad);\n    window.removeEventListener('turbolinks:before-render', onBeforeRender);\n    window.removeEventListener('turbolinks:request-end', onRequestEnd);\n  };\n\n  dmc.register('MDCLineRipple', mdc.lineRipple.MDCLineRipple);\n  dmc.register('MDCCheckbox', mdc.checkbox.MDCCheckbox);\n  dmc.register('MDCChip', mdc.chips.MDCChip);\n  dmc.register('MDCChipSet', mdc.chips.MDCChipSet);\n  dmc.register('MDCDialog', mdc.dialog.MDCDialog);\n  dmc.register('MDCPersistentDrawer', mdc.drawer.MDCPersistentDrawer);\n  dmc.register('MDCTemporaryDrawer', mdc.drawer.MDCTemporaryDrawer);\n  dmc.register('MDCFormField', mdc.formField.MDCFormField);\n  dmc.register('MDCRipple', mdc.ripple.MDCRipple);\n  dmc.register('MDCGridList', mdc.gridList.MDCGridList);\n  dmc.register('MDCIconToggle', mdc.iconToggle.MDCIconToggle);\n  dmc.register('MDCLinearProgress', mdc.linearProgress.MDCLinearProgress);\n  dmc.register('MDCRadio', mdc.radio.MDCRadio);\n  dmc.register('MDCSnackbar', mdc.snackbar.MDCSnackbar);\n  dmc.register('MDCTab', mdc.tabs.MDCTab);\n  dmc.register('MDCTabBar', mdc.tabs.MDCTabBar);\n  dmc.register('MDCTextField', mdc.textField.MDCTextField);\n  dmc.register('MDCMenu', mdc.menu.MDCMenu);\n  dmc.register('MDCSelect', mdc.select.MDCSelect);\n  dmc.register('MDCSlider', mdc.slider.MDCSlider);\n  dmc.register('MDCToolbar', mdc.toolbar.MDCToolbar);\n\n  // Module definition\n  if (typeof define !== 'undefined' && define.amd) {\n    define(function () {\n      return dmc;\n    });\n  } else if (typeof exports !== 'undefined') {\n    exports.dmc = dmc;\n  } else if (typeof navigator !== 'undefined') {\n    var browserLoad = function browserLoad() {\n      dmc.autoInit();\n      window.removeEventListener('load', browserLoad);\n    };\n\n    ;\n\n    window.addEventListener('load', browserLoad);\n    window.dmc = dmc;\n\n    // django translation stubs\n    if (!window.django || !window.django.jsi18n_initialized) {\n      window.pluralidx = function (count) {\n        return count == 1 ? 0 : 1;\n      };\n      window.gettext = function (msg) {\n        return msg;\n      };\n      window.ngettext = function (singular, plural, count) {\n        return count == 1 ? singular : plural;\n      };\n      window.gettext_noop = function (msg) {\n        return msg;\n      };\n      window.pgettext = function (context, msg) {\n        return msg;\n      };\n      window.npgettext = function (context, singular, plural, count) {\n        return count == 1 ? singular : plural;\n      };\n      var formats = {\n        'DATETIME_FORMAT': 'N j, Y, P',\n        'DATETIME_INPUT_FORMATS': ['%Y-%m-%d %H:%M:%S'],\n        'DATE_FORMAT': 'N j, Y',\n        'DATE_INPUT_FORMATS': ['%Y-%m-%d'],\n        'DECIMAL_SEPARATOR': '.',\n        'FIRST_DAY_OF_WEEK': 0,\n        'MONTH_DAY_FORMAT': 'F j',\n        'NUMBER_GROUPING': 3,\n        'SHORT_DATETIME_FORMAT': 'm/d/Y P',\n        'SHORT_DATE_FORMAT': 'm/d/Y',\n        'THOUSAND_SEPARATOR': ',',\n        'TIME_FORMAT': 'P',\n        'TIME_INPUT_FORMATS': ['%H:%M:%S'],\n        'YEAR_MONTH_FORMAT': 'F Y'\n      };\n\n      window.get_format = function (formatType) {\n        var value = formats[formatType];\n        if (typeof value == 'undefined') {\n          return formatType;\n        } else {\n          return value;\n        }\n      };\n    }\n  } else if (typeof module !== 'undefined') {\n    module.exports = dmc;\n  }\n})();\n'use strict';\n\nvar _set = function set(object, property, value, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent !== null) { set(parent, property, value, receiver); } } else if (\"value\" in desc && desc.writable) { desc.value = value; } else { var setter = desc.set; if (setter !== undefined) { setter.call(receiver, value); } } return value; };\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DMCDateUtils = function () {\n  function DMCDateUtils() {\n    _classCallCheck(this, DMCDateUtils);\n  }\n\n  _createClass(DMCDateUtils, null, [{\n    key: 'formatDate',\n    value: function formatDate(format, value) {\n      var result = '';\n      for (var i = 0; i < format.length; i++) {\n        if (format[i] === '%') {\n          switch (format[i + 1]) {\n            case 'd':\n              result += ('0' + value.getDate()).slice(-2);\n              break;\n            case 'm':\n              result += ('0' + (value.getMonth() + 1)).slice(-2);\n              break;\n            case 'Y':\n              result += value.getFullYear();\n              break;\n          }\n          i++;\n        } else {\n          result += format[i];\n        }\n      }\n      return result;\n    }\n  }, {\n    key: 'parseDateTime',\n    value: function parseDateTime(format, value) {\n      var splitFormat = format.split(/[.\\-/]/);\n      var date = value.split(/[.\\-/]/);\n      var day = void 0;\n      var month = void 0;\n      var year = void 0;\n      for (var i = 0; i < splitFormat.length; i++) {\n        switch (splitFormat[i]) {\n          case '%d':\n            day = date[i];\n            break;\n          case '%m':\n            month = date[i] - 1;\n            break;\n          case '%Y':\n            year = date[i];\n            break;\n        }\n      }\n      return new Date(Date.UTC(year, month, day));\n    }\n  }, {\n    key: 'daysInMonth',\n    value: function daysInMonth(year, month) {\n      return new Date(year, month + 1, 0).getDate();\n    }\n  }]);\n\n  return DMCDateUtils;\n}();\n\nDMCDateUtils.firstDayOfWeek = parseInt(get_format('FIRST_DAY_OF_WEEK'));\n\nDMCDateUtils.monthsOfYear = [gettext('January'), gettext('February'), gettext('March'), gettext('April'), gettext('May'), gettext('June'), gettext('July'), gettext('August'), gettext('September'), gettext('October'), gettext('November'), gettext('December')];\n\nDMCDateUtils.monthsOfYearAbbr = [pgettext('three letter January', 'Jan'), pgettext('three letter February', 'Feb'), pgettext('three letter March', 'Mar'), pgettext('three letter April', 'Apr'), pgettext('three letter May', 'May'), pgettext('three letter June', 'Jun'), pgettext('three letter July', 'Jul'), pgettext('three letter August', 'Aug'), pgettext('three letter September', 'Sep'), pgettext('three letter October', 'Oct'), pgettext('three letter November', 'Nov'), pgettext('three letter December', 'Dec')];\n\nDMCDateUtils.daysOfWeek = [pgettext('one letter Sunday', 'S'), pgettext('one letter Monday', 'M'), pgettext('one letter Tuesday', 'T'), pgettext('one letter Wednesday', 'W'), pgettext('one letter Thursday', 'T'), pgettext('one letter Friday', 'F'), pgettext('one letter Saturday', 'S')];\n\nDMCDateUtils.daysOfWeekAbbr = [pgettext('three letter Sunday', 'Sun'), pgettext('three letter Monday', 'Mon'), pgettext('three letter Tuesday', 'Tue'), pgettext('three letter Wednesday', 'Wed'), pgettext('three letter Thursday', 'Thu'), pgettext('three letter Friday', 'Fri'), pgettext('three letter Saturday', 'Sat')];\n\n/** Base class for calendar widgets */\n\nvar DMCCalendar = function () {\n  function DMCCalendar(root) {\n    var _this = this;\n\n    _classCallCheck(this, DMCCalendar);\n\n    this.root_ = root;\n    this.surfaceEl_ = root.querySelector('.dmc-calendar__surface');\n    this.currentMonthEl_ = root.querySelector('.dmc-calendar__month--current');\n    this.prevMonthButtonEl_ = root.querySelector('.dmc-calendar__prev');\n    this.nextMonthButtonEl_ = root.querySelector('.dmc-calendar__next');\n\n    this.disabled_ = root.classList.contains('dmc-calendar--disabled');\n\n    this.currentYear_ = 1970;\n    this.currentMonth_ = 0;\n    this.selectedDate_ = NaN;\n\n    // navigation\n    if (!this.disabled_) {\n      this.prevMonthClickHandler_ = function () {\n        return _this.handlePrevMonthClick_();\n      };\n      this.prevMonthButtonEl_.addEventListener('click', this.prevMonthClickHandler_);\n\n      this.nextMonthClickHandler_ = function () {\n        return _this.handleNextMonthClick_();\n      };\n      this.nextMonthButtonEl_.addEventListener('click', this.nextMonthClickHandler_);\n\n      this.dayClickHandler_ = function (event) {\n        return _this.handleDayClick_(event);\n      };\n      this.surfaceEl_.addEventListener('click', this.dayClickHandler_);\n    }\n  }\n\n  _createClass(DMCCalendar, [{\n    key: 'destroy',\n    value: function destroy() {\n      if (!this.disabled_) {\n        this.prevMonthButtonEl_.removeEventListener('click', this.prevMonthClickHandler_);\n        this.nextMonthButtonEl_.removeEventListener('click', this.nextMonthClickHandler_);\n        this.surfaceEl_.removeEventListener('click', this.dayClickHandler_);\n      }\n    }\n  }, {\n    key: 'handleNextMonthClick_',\n    value: function handleNextMonthClick_() {\n      this.changeMonth_(1);\n    }\n  }, {\n    key: 'handlePrevMonthClick_',\n    value: function handlePrevMonthClick_() {\n      this.changeMonth_(-1);\n    }\n  }, {\n    key: 'handleDayClick_',\n    value: function handleDayClick_(event) {\n      if (event.target.tagName != 'SPAN') {\n        return;\n      }\n      var day = parseInt(event.target.textContent);\n      if (!isNaN(day)) {\n        this.changeDay_(day);\n      }\n    }\n  }, {\n    key: 'renderMonth_',\n    value: function renderMonth_(year, month, target) {\n      var currentDay = NaN;\n      if (!isNaN(this.selectedDate_) && this.selectedDate_.getFullYear() === year && this.selectedDate_.getMonth() == month) {\n        currentDay = this.selectedDate_.getDate();\n      }\n\n      // title\n      var titleEl = target.querySelector('.dmc-calendar__title');\n      titleEl.innerText = DMCDateUtils.monthsOfYear[month] + ' ' + year;\n\n      // weekdays\n      var weekdaysEl = target.querySelector('.dmc-calendar__weekdays');\n      weekdaysEl.innerHTML = [0, 1, 2, 3, 4, 5, 6].map(function (e) {\n        var day = DMCDateUtils.daysOfWeek[(e + DMCDateUtils.firstDayOfWeek) % 7];\n        return '<div class=\"dmc-calendar__weekday\">' + day + '</div>';\n      }).join('');\n\n      // days\n      var daysEl = target.querySelector('.dmc_calendar__days');\n      var days = [];\n      var startPos = new Date(year, month, 1).getDay() - DMCDateUtils.firstDayOfWeek;\n      var daysInMonth = DMCDateUtils.daysInMonth(year, month);\n      for (var i = 0; i < 6; i++) {\n        days.push('<div class=\"dmc-calendar__row\">');\n        for (var j = 0; j < 7; j++) {\n          var cell = i * 7 + j;\n          var label = '';\n          var class_ = '';\n          if (cell >= startPos && cell < daysInMonth + startPos) {\n            label = cell - startPos + 1;\n            if (label === currentDay) {\n              class_ = ' dmc_calendar__current';\n            }\n          }\n\n          days.push('<div class=\"dmc-calendar__day' + class_ + '\"><span>' + label + '</span></div>');\n        }\n        days.push('</div>');\n      }\n      daysEl.innerHTML = days.join('');\n    }\n  }, {\n    key: 'changeMonth_',\n    value: function changeMonth_(shift) {\n      this.currentMonth_ += shift;\n      if (this.currentMonth_ < 0) {\n        this.currentYear_ = this.currentYear_ - 1;\n        this.currentMonth_ = 11;\n      } else if (this.currentMonth_ > 11) {\n        this.currentYear_ = this.currentYear_ + 1;\n        this.currentMonth_ = 0;\n      }\n\n      this.updateCurrentMonth();\n\n      this.renderMonth_(this.currentYear_, this.currentMonth_, this.currentMonthEl_);\n    }\n  }, {\n    key: 'changeDay_',\n    value: function changeDay_(day) {\n      this.selectedDate_ = new Date(this.currentYear_, this.currentMonth_, day);\n      this.updateCurrentDate_();\n      this.renderMonth_(this.currentYear_, this.currentMonth_, this.currentMonthEl_);\n    }\n  }, {\n    key: 'updateCurrentMonth',\n    value: function updateCurrentMonth() {}\n  }, {\n    key: 'updateCurrentDate_',\n    value: function updateCurrentDate_() {}\n  }, {\n    key: 'selectedDate',\n    get: function get() {\n      return this.selectedDate_;\n    },\n    set: function set(value) {\n      this.selectedDate_ = value;\n      if (!isNaN(value)) {\n        this.currentYear_ = value.getFullYear();\n        this.currentMonth_ = value.getMonth();\n      }\n      this.renderMonth_(this.currentYear_, this.currentMonth_, this.currentMonthEl_);\n    }\n  }]);\n\n  return DMCCalendar;\n}();\n\n/** Inline calendar widget. */\n\n\nvar DMCInlineCalendar = function (_DMCCalendar) {\n  _inherits(DMCInlineCalendar, _DMCCalendar);\n\n  _createClass(DMCInlineCalendar, null, [{\n    key: 'attachTo',\n    value: function attachTo(root) {\n      return new DMCInlineCalendar(root);\n    }\n  }]);\n\n  function DMCInlineCalendar(root) {\n    _classCallCheck(this, DMCInlineCalendar);\n\n    var _this2 = _possibleConstructorReturn(this, (DMCInlineCalendar.__proto__ || Object.getPrototypeOf(DMCInlineCalendar)).call(this, root));\n\n    _this2.targetEl_ = document.getElementById(root.dataset.dateTarget);\n\n    // init date\n    var initialDate = DMCDateUtils.parseDateTime(_this2.targetEl_.dataset.dateFormat, _this2.targetEl_.value);\n    if (isNaN(initialDate)) {\n      initialDate = new Date();\n    } else {\n      _this2.selectedDate_ = initialDate;\n    }\n    _this2.currentYear_ = initialDate.getFullYear();\n    _this2.currentMonth_ = initialDate.getMonth();\n\n    _this2.renderMonth_(_this2.currentYear_, _this2.currentMonth_, _this2.currentMonthEl_);\n    return _this2;\n  }\n\n  _createClass(DMCInlineCalendar, [{\n    key: 'changeDay_',\n    value: function changeDay_(day) {\n      if (!isNaN(this.selectedDate_) && this.selectedDate_.getDate() === day) {\n        day = undefined;\n      }\n      _get(DMCInlineCalendar.prototype.__proto__ || Object.getPrototypeOf(DMCInlineCalendar.prototype), 'changeDay_', this).call(this, day);\n    }\n\n    /** Set new selected date on a month change */\n\n  }, {\n    key: 'updateCurrentMonth',\n    value: function updateCurrentMonth() {\n      if (!isNaN(this.selectedDate_)) {\n        var day = this.selectedDate_.getDate();\n        var daysInMonth = new Date(this.currentYear_, this.currentMonth_ + 1, 0).getDate();\n        if (daysInMonth < day) {\n          day = daysInMonth;\n        }\n        this.selectedDate_ = new Date(this.currentYear_, this.currentMonth_, day);\n        this.updateCurrentDate_();\n      }\n    }\n\n    /** Update target hidden input */\n\n  }, {\n    key: 'updateCurrentDate_',\n    value: function updateCurrentDate_() {\n      if (!isNaN(this.selectedDate)) {\n        this.targetEl_.value = DMCDateUtils.formatDate(this.targetEl_.dataset.dateFormat, this.selectedDate);\n      } else {\n        this.targetEl_.value = '';\n      }\n      _get(DMCInlineCalendar.prototype.__proto__ || Object.getPrototypeOf(DMCInlineCalendar.prototype), 'updateCurrentDate_', this).call(this);\n    }\n  }]);\n\n  return DMCInlineCalendar;\n}(DMCCalendar);\n\nvar DMCPopupCalendar = function (_DMCCalendar2) {\n  _inherits(DMCPopupCalendar, _DMCCalendar2);\n\n  function DMCPopupCalendar(root) {\n    _classCallCheck(this, DMCPopupCalendar);\n\n    var _this3 = _possibleConstructorReturn(this, (DMCPopupCalendar.__proto__ || Object.getPrototypeOf(DMCPopupCalendar)).call(this, root));\n\n    _this3.targetEl_ = document.getElementById(root.dataset.dateTarget);\n    _this3.headerEl_ = root.querySelector('.dmc-calendar-header');\n    _this3.headerYearEl_ = _this3.headerEl_.querySelector('.dmc-calendar-header__year');\n    _this3.headerWeekdayEl_ = _this3.headerEl_.querySelector('.dmc-calendar-header__weekday');\n    _this3.headerDayEl_ = _this3.headerEl_.querySelector('.dmc-calendar-header__day');\n    return _this3;\n  }\n\n  _createClass(DMCPopupCalendar, [{\n    key: 'changeDay_',\n    value: function changeDay_(day) {\n      _get(DMCPopupCalendar.prototype.__proto__ || Object.getPrototypeOf(DMCPopupCalendar.prototype), 'changeDay_', this).call(this, day);\n      this.renderHeader();\n    }\n  }, {\n    key: 'renderHeader',\n    value: function renderHeader() {\n      if (!isNaN(this.selectedDate_)) {\n        this.headerYearEl_.innerText = this.currentYear_;\n        this.headerWeekdayEl_.innerText = DMCDateUtils.daysOfWeekAbbr[this.selectedDate_.getDay()] + ',';\n        this.headerDayEl_.innerText = DMCDateUtils.monthsOfYearAbbr[this.currentMonth_] + ' ' + this.selectedDate_.getDate();\n      } else {\n        this.headerYearEl_.innerText = '';\n        this.headerWeekdayEl_.innerText = '';\n        this.headerDayEl_.innerText = '';\n      }\n    }\n  }, {\n    key: 'selectedDate',\n    set: function set(value) {\n      _set(DMCPopupCalendar.prototype.__proto__ || Object.getPrototypeOf(DMCPopupCalendar.prototype), 'selectedDate', value, this);\n      this.renderHeader();\n    }\n  }]);\n\n  return DMCPopupCalendar;\n}(DMCCalendar);\n\nvar DMCDateInput = function () {\n  _createClass(DMCDateInput, null, [{\n    key: 'attachTo',\n    value: function attachTo(root) {\n      return new DMCDateInput(root);\n    }\n  }]);\n\n  function DMCDateInput(root) {\n    var _this4 = this;\n\n    _classCallCheck(this, DMCDateInput);\n\n    this.root_ = root;\n    this.textEl_ = root.querySelector('.mdc-text-field');\n    this.calendarEl_ = root.querySelector('.dmc-calendar');\n    this.dialogEl_ = root.querySelector('.mdc-dialog');\n    this.buttonEl_ = root.querySelector('.dmc-datepicker__button');\n    this.targetEl_ = document.getElementById(this.calendarEl_.dataset.dateTarget);\n\n    this.popupOpenHandler = function (event) {\n      return _this4.handlePopupOpen(event);\n    };\n    this.acceptDialogHandler = function () {\n      return _this4.handleDialogAccept();\n    };\n\n    this.text_ = mdc.textField.MDCTextField.attachTo(this.textEl_);\n    this.dialog_ = mdc.dialog.MDCDialog.attachTo(this.dialogEl_);\n    this.calendar_ = new DMCPopupCalendar(this.calendarEl_);\n\n    this.buttonEl_.addEventListener('click', this.popupOpenHandler);\n    this.dialog_.listen('MDCDialog:accept', this.acceptDialogHandler);\n  }\n\n  _createClass(DMCDateInput, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.buttonEl_.removeEventListener('click', this.popupOpenHandler);\n      this.text_.destroy();\n      this.dialog_.destroy();\n      this.calendar_.destroy();\n    }\n  }, {\n    key: 'handlePopupOpen',\n    value: function handlePopupOpen(event) {\n      event.preventDefault();\n\n      var selectedDate = DMCDateUtils.parseDateTime(this.targetEl_.dataset.dateFormat, this.targetEl_.value);\n      if (isNaN(selectedDate)) {\n        selectedDate = new Date();\n      }\n      this.calendar_.selectedDate = selectedDate;\n\n      this.dialog_.lastFocusedTarget = event.target;\n      this.dialog_.show();\n    }\n  }, {\n    key: 'handleDialogAccept',\n    value: function handleDialogAccept() {\n      var selectedDate = this.calendar_.selectedDate_;\n      if (!isNaN(selectedDate)) {\n        this.text_.value = DMCDateUtils.formatDate(this.targetEl_.dataset.dateFormat, selectedDate);\n      }\n    }\n  }]);\n\n  return DMCDateInput;\n}();\n\ndmc.register('DMCInlineCalendar', DMCInlineCalendar);\ndmc.register('DMCDateInput', DMCDateInput);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar DMCPasswordField = function (_mdc$base$MDCComponen) {\n  _inherits(DMCPasswordField, _mdc$base$MDCComponen);\n\n  function DMCPasswordField() {\n    _classCallCheck(this, DMCPasswordField);\n\n    return _possibleConstructorReturn(this, (DMCPasswordField.__proto__ || Object.getPrototypeOf(DMCPasswordField)).apply(this, arguments));\n  }\n\n  _createClass(DMCPasswordField, [{\n    key: 'initialize',\n    value: function initialize() {\n      var _this2 = this;\n\n      this.textField_ = new mdc.textField.MDCTextField(this.root_);\n      this.input_ = this.root_.querySelector('.dmc-text-field__input');\n      this.toggle_ = this.root_.querySelector('.dmc-password-field__toggle');\n\n      this.onToggle = function (event) {\n        event.preventDefault();\n        if (_this2.input_.type === 'password') {\n          _this2.input_.type = 'text';\n          _this2.toggle_.text = 'visibility_off';\n        } else {\n          _this2.input_.type = 'password';\n          _this2.toggle_.text = 'visibility';\n        }\n\n        _this2.input_.selectionStart = _this2.input_.selectionEnd = _this2.input_.value.length;\n        _this2.input_.focus();\n      };\n      this.toggle_.addEventListener('click', this.onToggle);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      if (this.textField_) {\n        this.textField_.destroy();\n      }\n      this.toggle_.removeEventListener('click', this.onToggle);\n    }\n  }], [{\n    key: 'attachTo',\n    value: function attachTo(root) {\n      return new DMCPasswordField(root, new mdc.base.MDCFoundation());\n    }\n  }]);\n\n  return DMCPasswordField;\n}(mdc.base.MDCComponent);\n\ndmc.register('DMCPasswordField', DMCPasswordField);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MDCSelect = function (_mdc$select$MDCSelect) {\n  _inherits(MDCSelect, _mdc$select$MDCSelect);\n\n  function MDCSelect() {\n    _classCallCheck(this, MDCSelect);\n\n    return _possibleConstructorReturn(this, (MDCSelect.__proto__ || Object.getPrototypeOf(MDCSelect)).apply(this, arguments));\n  }\n\n  _createClass(MDCSelect, [{\n    key: 'getDefaultFoundation',\n    value: function getDefaultFoundation() {\n      var foundation = _get(MDCSelect.prototype.__proto__ || Object.getPrototypeOf(MDCSelect.prototype), 'getDefaultFoundation', this).call(this);\n      var superSetMenuStyle = foundation.setMenuStylesForOpenAtIndex_;\n\n      foundation.resize = function () {\n        /* no action here */\n      };\n\n      foundation.setMenuStylesForOpenAtIndex_ = function (index) {\n        superSetMenuStyle.call(foundation, index);\n\n        var rect = foundation.adapter_.computeBoundingRect();\n        foundation.adapter_.setMenuElStyle('width', rect.width + 'px');\n      };\n\n      return foundation;\n    }\n  }]);\n\n  return MDCSelect;\n}(mdc.select.MDCSelect);\n\nvar DMCSelect = function (_mdc$base$MDCComponen) {\n  _inherits(DMCSelect, _mdc$base$MDCComponen);\n\n  function DMCSelect() {\n    _classCallCheck(this, DMCSelect);\n\n    return _possibleConstructorReturn(this, (DMCSelect.__proto__ || Object.getPrototypeOf(DMCSelect)).apply(this, arguments));\n  }\n\n  _createClass(DMCSelect, [{\n    key: 'initialize',\n    value: function initialize() {\n      var _this3 = this;\n\n      this.customSelect_ = new MDCSelect(this.root_.querySelector('.mdc-select[role=\"listbox\"]'));\n      this.nativeSelect_ = this.root_.querySelector('select.mdc-select');\n      this.changeHandler = function (_ref) {\n        var type = _ref.type;\n\n        var changedSelect = void 0;\n        var selectToUpdate = void 0;\n\n        if (type === 'MDCSelect:change') {\n          changedSelect = _this3.customSelect_;\n          selectToUpdate = _this3.nativeSelect_;\n        } else {\n          changedSelect = _this3.nativeSelect_;\n          selectToUpdate = _this3.customSelect_;\n        }\n        selectToUpdate.selectedIndex = changedSelect.selectedIndex;\n      };\n      this.customSelect_.listen('MDCSelect:change', this.changeHandler);\n      this.nativeSelect_.addEventListener('change', this.changeHandler);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      if (this.customSelect_) {\n        this.customSelect_.destroy();\n      }\n      if (this.nativeSelect_) {\n        this.nativeSelect_.removeEventListener('change', this.changeHandler);\n      }\n    }\n  }], [{\n    key: 'attachTo',\n    value: function attachTo(root) {\n      return new DMCSelect(root, new mdc.base.MDCFoundation());\n    }\n  }]);\n\n  return DMCSelect;\n}(mdc.base.MDCComponent);\n\ndmc.register('DMCSelect', DMCSelect);","class DMCDateUtils {\n  static formatDate(format, value) {\n    let result = '';\n    for (let i=0; i< format.length; i++) {\n      if (format[i] === '%') {\n        switch (format[i+1]) {\n          case 'd':\n            result += ('0' + value.getDate()).slice(-2);\n            break;\n          case 'm':\n            result += ('0' + (value.getMonth()+1)).slice(-2);\n            break;\n          case 'Y':\n            result += value.getFullYear();\n            break;\n        }\n        i++;\n      } else {\n        result += format[i];\n      }\n    }\n    return result;\n  };\n\n  static parseDateTime(format, value) {\n    let splitFormat = format.split(/[.\\-/]/);\n    let date = value.split(/[.\\-/]/);\n    let day;\n    let month;\n    let year;\n    for (let i=0; i < splitFormat.length; i++) {\n      switch (splitFormat[i]) {\n          case '%d':\n              day = date[i];\n              break;\n          case '%m':\n              month = date[i] - 1;\n              break;\n          case '%Y':\n              year = date[i];\n              break;\n      }\n    }\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  static daysInMonth(year, month) {\n    return new Date(year, month+1, 0).getDate();\n  }\n}\n\nDMCDateUtils.firstDayOfWeek = parseInt(get_format('FIRST_DAY_OF_WEEK'));\n\nDMCDateUtils.monthsOfYear = [\n  gettext('January'),\n  gettext('February'),\n  gettext('March'),\n  gettext('April'),\n  gettext('May'),\n  gettext('June'),\n  gettext('July'),\n  gettext('August'),\n  gettext('September'),\n  gettext('October'),\n  gettext('November'),\n  gettext('December'),\n];\n\nDMCDateUtils.monthsOfYearAbbr = [\n  pgettext('three letter January', 'Jan'),\n  pgettext('three letter February', 'Feb'),\n  pgettext('three letter March', 'Mar'),\n  pgettext('three letter April', 'Apr'),\n  pgettext('three letter May', 'May'),\n  pgettext('three letter June', 'Jun'),\n  pgettext('three letter July', 'Jul'),\n  pgettext('three letter August', 'Aug'),\n  pgettext('three letter September', 'Sep'),\n  pgettext('three letter October', 'Oct'),\n  pgettext('three letter November', 'Nov'),\n  pgettext('three letter December', 'Dec'),\n];\n\nDMCDateUtils.daysOfWeek = [\n  pgettext('one letter Sunday', 'S'),\n  pgettext('one letter Monday', 'M'),\n  pgettext('one letter Tuesday', 'T'),\n  pgettext('one letter Wednesday', 'W'),\n  pgettext('one letter Thursday', 'T'),\n  pgettext('one letter Friday', 'F'),\n  pgettext('one letter Saturday', 'S'),\n];\n\nDMCDateUtils.daysOfWeekAbbr = [\n  pgettext('three letter Sunday', 'Sun'),\n  pgettext('three letter Monday', 'Mon'),\n  pgettext('three letter Tuesday', 'Tue'),\n  pgettext('three letter Wednesday', 'Wed'),\n  pgettext('three letter Thursday', 'Thu'),\n  pgettext('three letter Friday', 'Fri'),\n  pgettext('three letter Saturday', 'Sat'),\n];\n\n/** Base class for calendar widgets */\nclass DMCCalendar {\n  constructor(root) {\n    this.root_ = root;\n    this.surfaceEl_ = root.querySelector('.dmc-calendar__surface');\n    this.currentMonthEl_ = root.querySelector('.dmc-calendar__month--current');\n    this.prevMonthButtonEl_ = root.querySelector('.dmc-calendar__prev');\n    this.nextMonthButtonEl_ = root.querySelector('.dmc-calendar__next');\n\n    this.disabled_ = root.classList.contains('dmc-calendar--disabled');\n\n    this.currentYear_ = 1970;\n    this.currentMonth_ = 0;\n    this.selectedDate_ = NaN;\n\n    // navigation\n    if (!this.disabled_) {\n      this.prevMonthClickHandler_ = () => this.handlePrevMonthClick_();\n      this.prevMonthButtonEl_.addEventListener('click', this.prevMonthClickHandler_);\n\n      this.nextMonthClickHandler_ = () => this.handleNextMonthClick_();\n      this.nextMonthButtonEl_.addEventListener('click', this.nextMonthClickHandler_);\n\n      this.dayClickHandler_ = (event) => this.handleDayClick_(event);\n      this.surfaceEl_.addEventListener('click', this.dayClickHandler_);\n    }\n  }\n\n  destroy() {\n    if (!this.disabled_) {\n      this.prevMonthButtonEl_.removeEventListener('click', this.prevMonthClickHandler_);\n      this.nextMonthButtonEl_.removeEventListener('click', this.nextMonthClickHandler_);\n      this.surfaceEl_.removeEventListener('click', this.dayClickHandler_);\n    }\n  }\n\n  handleNextMonthClick_() {\n    this.changeMonth_(1);\n  }\n\n  handlePrevMonthClick_() {\n    this.changeMonth_(-1);\n  }\n\n  handleDayClick_(event) {\n    if (event.target.tagName != 'SPAN') {\n      return;\n    }\n    const day = parseInt(event.target.textContent);\n    if (!isNaN(day)) {\n      this.changeDay_(day);\n    }\n  }\n\n  renderMonth_(year, month, target) {\n    let currentDay = NaN;\n    if (!isNaN(this.selectedDate_) &&\n        this.selectedDate_.getFullYear() === year &&\n        this.selectedDate_.getMonth() == month) {\n      currentDay = this.selectedDate_.getDate();\n    }\n\n    // title\n    let titleEl = target.querySelector('.dmc-calendar__title');\n    titleEl.innerText = `${DMCDateUtils.monthsOfYear[month]} ${year}`;\n\n    // weekdays\n    let weekdaysEl = target.querySelector('.dmc-calendar__weekdays');\n    weekdaysEl.innerHTML = [0, 1, 2, 3, 4, 5, 6].map((e) => {\n      let day = DMCDateUtils.daysOfWeek[(e + DMCDateUtils.firstDayOfWeek) % 7];\n      return `<div class=\"dmc-calendar__weekday\">${day}</div>`;\n    }).join('');\n\n    // days\n    let daysEl = target.querySelector('.dmc_calendar__days');\n    let days = [];\n    let startPos = new Date(year, month, 1).getDay() - DMCDateUtils.firstDayOfWeek;\n    let daysInMonth = DMCDateUtils.daysInMonth(year, month);\n    for (let i=0; i<6; i++) {\n      days.push('<div class=\"dmc-calendar__row\">');\n      for (let j=0; j<7; j++) {\n        let cell = i*7+j;\n        let label='';\n        let class_='';\n        if (cell >= startPos && cell < daysInMonth + startPos) {\n          label = cell - startPos + 1;\n          if (label === currentDay) {\n            class_ = ' dmc_calendar__current';\n          }\n        }\n\n        days.push(`<div class=\"dmc-calendar__day${class_}\"><span>${label}</span></div>`);\n      }\n      days.push('</div>');\n    }\n    daysEl.innerHTML = days.join('');\n  };\n\n  changeMonth_(shift) {\n    this.currentMonth_ += shift;\n    if (this.currentMonth_ < 0) {\n      this.currentYear_ = this.currentYear_ - 1;\n      this.currentMonth_ = 11;\n    } else if (this.currentMonth_>11) {\n      this.currentYear_ = this.currentYear_ + 1;\n      this.currentMonth_ = 0;\n    }\n\n    this.updateCurrentMonth();\n\n    this.renderMonth_(this.currentYear_, this.currentMonth_, this.currentMonthEl_);\n  }\n\n  changeDay_(day) {\n    this.selectedDate_ = new Date(this.currentYear_, this.currentMonth_, day);\n    this.updateCurrentDate_();\n    this.renderMonth_(this.currentYear_, this.currentMonth_, this.currentMonthEl_);\n  }\n\n  updateCurrentMonth() {\n\n  }\n\n  updateCurrentDate_() {\n  }\n\n  get selectedDate() {\n    return this.selectedDate_;\n  }\n\n  set selectedDate(value) {\n    this.selectedDate_ = value;\n    if (!isNaN(value)) {\n      this.currentYear_ = value.getFullYear();\n      this.currentMonth_ = value.getMonth();\n    }\n    this.renderMonth_(this.currentYear_, this.currentMonth_, this.currentMonthEl_);\n  }\n}\n\n/** Inline calendar widget. */\nclass DMCInlineCalendar extends DMCCalendar {\n  static attachTo(root) {\n    return new DMCInlineCalendar(root);\n  }\n\n  constructor(root) {\n    super(root);\n    this.targetEl_ = document.getElementById(root.dataset.dateTarget);\n\n    // init date\n    let initialDate = DMCDateUtils.parseDateTime(this.targetEl_.dataset.dateFormat, this.targetEl_.value);\n    if (isNaN(initialDate)) {\n      initialDate = new Date();\n    } else {\n      this.selectedDate_ = initialDate;\n    }\n    this.currentYear_ = initialDate.getFullYear();\n    this.currentMonth_ = initialDate.getMonth();\n\n    this.renderMonth_(this.currentYear_, this.currentMonth_, this.currentMonthEl_);\n  }\n\n  changeDay_(day) {\n    if (!isNaN(this.selectedDate_) && this.selectedDate_.getDate() === day) {\n      day = undefined;\n    }\n    super.changeDay_(day);\n  }\n\n  /** Set new selected date on a month change */\n  updateCurrentMonth() {\n    if (!isNaN(this.selectedDate_)) {\n      let day = this.selectedDate_.getDate();\n      let daysInMonth = new Date(this.currentYear_, this.currentMonth_+1, 0).getDate();\n      if (daysInMonth < day) {\n        day = daysInMonth;\n      }\n      this.selectedDate_ = new Date(this.currentYear_, this.currentMonth_, day);\n      this.updateCurrentDate_();\n    }\n  }\n\n  /** Update target hidden input */\n  updateCurrentDate_() {\n    if (!isNaN(this.selectedDate)) {\n      this.targetEl_.value = DMCDateUtils.formatDate(\n        this.targetEl_.dataset.dateFormat,\n        this.selectedDate\n      );\n    } else {\n      this.targetEl_.value = '';\n    }\n    super.updateCurrentDate_();\n  }\n}\n\nclass DMCPopupCalendar extends DMCCalendar {\n  constructor(root) {\n    super(root);\n    this.targetEl_ = document.getElementById(root.dataset.dateTarget);\n    this.headerEl_ = root.querySelector('.dmc-calendar-header');\n    this.headerYearEl_ = this.headerEl_.querySelector('.dmc-calendar-header__year');\n    this.headerWeekdayEl_ = this.headerEl_.querySelector('.dmc-calendar-header__weekday');\n    this.headerDayEl_ = this.headerEl_.querySelector('.dmc-calendar-header__day');\n  }\n\n  changeDay_(day) {\n    super.changeDay_(day);\n    this.renderHeader();\n  }\n\n  set selectedDate(value) {\n    super.selectedDate = value;\n    this.renderHeader();\n  }\n\n  renderHeader() {\n    if (!isNaN(this.selectedDate_)) {\n      this.headerYearEl_.innerText = this.currentYear_;\n      this.headerWeekdayEl_.innerText = DMCDateUtils.daysOfWeekAbbr[this.selectedDate_.getDay()] + ',';\n      this.headerDayEl_.innerText = DMCDateUtils.monthsOfYearAbbr[this.currentMonth_] +\n        ' ' + this.selectedDate_.getDate();\n    } else {\n      this.headerYearEl_.innerText = '';\n      this.headerWeekdayEl_.innerText = '';\n      this.headerDayEl_.innerText = '';\n    }\n  }\n}\n\nclass DMCDateInput {\n  static attachTo(root) {\n    return new DMCDateInput(root);\n  }\n\n  constructor(root) {\n    this.root_ = root;\n    this.textEl_ = root.querySelector('.mdc-text-field');\n    this.calendarEl_ = root.querySelector('.dmc-calendar');\n    this.dialogEl_ = root.querySelector('.mdc-dialog');\n    this.buttonEl_ = root.querySelector('.dmc-datepicker__button');\n    this.targetEl_ = document.getElementById(this.calendarEl_.dataset.dateTarget);\n\n    this.popupOpenHandler = (event) => this.handlePopupOpen(event);\n    this.acceptDialogHandler = () => this.handleDialogAccept();\n\n    this.text_ = mdc.textField.MDCTextField.attachTo(this.textEl_);\n    this.dialog_ = mdc.dialog.MDCDialog.attachTo(this.dialogEl_);\n    this.calendar_ = new DMCPopupCalendar(this.calendarEl_);\n\n    this.buttonEl_.addEventListener('click', this.popupOpenHandler);\n    this.dialog_.listen('MDCDialog:accept', this.acceptDialogHandler);\n  }\n\n  destroy() {\n    this.buttonEl_.removeEventListener('click', this.popupOpenHandler);\n    this.text_.destroy();\n    this.dialog_.destroy();\n    this.calendar_.destroy();\n  }\n\n  handlePopupOpen(event) {\n    event.preventDefault();\n\n    let selectedDate = DMCDateUtils.parseDateTime(\n      this.targetEl_.dataset.dateFormat,\n      this.targetEl_.value\n    );\n    if (isNaN(selectedDate)) {\n      selectedDate = new Date();\n    }\n    this.calendar_.selectedDate = selectedDate;\n\n    this.dialog_.lastFocusedTarget = event.target;\n    this.dialog_.show();\n  }\n\n  handleDialogAccept() {\n    const selectedDate = this.calendar_.selectedDate_;\n    if (!isNaN(selectedDate)) {\n      this.text_.value = DMCDateUtils.formatDate(\n        this.targetEl_.dataset.dateFormat,\n        selectedDate\n      );\n    }\n  }\n}\n\ndmc.register('DMCInlineCalendar', DMCInlineCalendar);\ndmc.register('DMCDateInput', DMCDateInput);\n","class DMCPasswordField extends mdc.base.MDCComponent {\n  static attachTo(root) {\n    return new DMCPasswordField(root, new mdc.base.MDCFoundation());\n  }\n\n  initialize() {\n    this.textField_ = new mdc.textField.MDCTextField(this.root_);\n    this.input_ = this.root_.querySelector('.dmc-text-field__input');\n    this.toggle_ = this.root_.querySelector('.dmc-password-field__toggle');\n\n    this.onToggle = (event) => {\n      event.preventDefault();\n      if (this.input_.type === 'password') {\n        this.input_.type = 'text';\n        this.toggle_.text = 'visibility_off';\n      } else {\n        this.input_.type = 'password';\n        this.toggle_.text = 'visibility';\n      }\n\n      this.input_.selectionStart = this.input_.selectionEnd = this.input_.value.length;\n      this.input_.focus();\n    };\n    this.toggle_.addEventListener('click', this.onToggle);\n  }\n\n  destroy() {\n    if (this.textField_) {\n      this.textField_.destroy();\n    }\n    this.toggle_.removeEventListener('click', this.onToggle);\n  }\n}\n\ndmc.register('DMCPasswordField', DMCPasswordField);\n","class MDCSelect extends mdc.select.MDCSelect {\n  getDefaultFoundation() {\n    let foundation = super.getDefaultFoundation();\n    let superSetMenuStyle = foundation.setMenuStylesForOpenAtIndex_;\n\n    foundation.resize = function() {\n      /* no action here */\n    };\n\n    foundation.setMenuStylesForOpenAtIndex_ = function(index) {\n      superSetMenuStyle.call(foundation, index);\n\n      const rect = foundation.adapter_.computeBoundingRect();\n      foundation.adapter_.setMenuElStyle('width', `${rect.width}px`);\n    };\n\n    return foundation;\n  }\n}\n\nclass DMCSelect extends mdc.base.MDCComponent {\n  static attachTo(root) {\n    return new DMCSelect(root, new mdc.base.MDCFoundation());\n  }\n\n  initialize() {\n    this.customSelect_ = new MDCSelect(this.root_.querySelector('.mdc-select[role=\"listbox\"]'));\n    this.nativeSelect_ = this.root_.querySelector('select.mdc-select');\n    this.changeHandler = ({type}) => {\n      let changedSelect;\n      let selectToUpdate;\n\n      if (type === 'MDCSelect:change') {\n        changedSelect = this.customSelect_;\n        selectToUpdate = this.nativeSelect_;\n      } else {\n        changedSelect = this.nativeSelect_;\n        selectToUpdate = this.customSelect_;\n      }\n      selectToUpdate.selectedIndex = changedSelect.selectedIndex;\n    };\n    this.customSelect_.listen('MDCSelect:change', this.changeHandler);\n    this.nativeSelect_.addEventListener('change', this.changeHandler);\n  }\n\n  destroy() {\n    if (this.customSelect_) {\n      this.customSelect_.destroy();\n    }\n    if (this.nativeSelect_) {\n      this.nativeSelect_.removeEventListener('change', this.changeHandler);\n    }\n  }\n}\n\ndmc.register('DMCSelect', DMCSelect);\n"]}